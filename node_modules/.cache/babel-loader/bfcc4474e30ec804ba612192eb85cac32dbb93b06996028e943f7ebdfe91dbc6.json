{"ast":null,"code":"var _jsxFileName = \"/Users/wesleylu/Desktop/wlu314/src/Pages/Home/Projects.jsx\";\nimport React from 'react';\nimport './Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  const projects = [{\n    title: 'Automate Algorithm Design',\n    description: 'In a 5.9 million-image airborne object tracking dataset, I implemented MLP and KNN surrogate meta-models to enhance genome performance prediction, improving model selection accuracy.',\n    tags: ['Python', 'PyTorch', 'Scikit-Learn', 'AWS'],\n    logo: '/img/vipprogram.jpg',\n    link: 'https://vip.gatech.edu/teams/vvk'\n  }, {\n    title: 'Personal Website',\n    description: 'After designing my website on Figma, I implemented it using HTML, CSS, and JavaScript to host online using Vercel.',\n    tags: ['HTML/CSS', 'JavaScript', 'Figma', 'React'],\n    logo: '/img/websitelogo.png',\n    link: 'wesley.lu'\n  }, {\n    title: 'Pairs Trading with Machine Learning',\n    description: 'Using public datasets and APIs, found trading pairs and predict price correlation using supervised and unsupervised machine learning methods.',\n    tags: ['Python', 'Matplotlib', 'Scikit-Learn', 'Tensorflow', 'SQL'],\n    logo: '/img/stocklogo.png',\n    link: 'https://wlu314.github.io/CS4641/'\n  }, {\n    title: 'Spindle',\n    description: 'No-code web app that enables users to set up NoSQL database and generate RESTful APIs by uploading a CSV file, simplifying backend setup and generates CRUD endpoints using natural language queries.',\n    tags: ['TypeScript', 'JavaScript', 'MongoDB', 'LangChain'],\n    logo: '/img/spindlelogo.png',\n    link: 'spindleapi.com'\n  }, {\n    title: 'Algorithmic Puzzle Solving',\n    description: 'Passionate about tackling complex logic challenges, I enjoy solving Jane Street puzzles through simulations or programming.',\n    tags: ['Python', 'Java', 'Jupyter Notebook'],\n    logo: '/img/puzzlelogo.avif',\n    link: 'https://www.janestreet.com/puzzles/current-puzzle/'\n  }, {\n    title: 'LC2200 Processor',\n    description: 'Design an LC2200 emulator to simulate core functions including ALU computations, register updates, manages interrupts and paging for effective memory/process management.',\n    tags: ['C++'],\n    logo: '/img/cpulogo.jpg',\n    link: ''\n  }, {\n    title: 'Spotify Stats Tool',\n    description: 'Developed an Android application that stores user information and displays stats. Features include artist guessing game, friend list, and etc. All designs made in Figma.',\n    tags: ['Java', 'Android Studio', 'Figma', 'Firebase', 'SpotifyAPI'],\n    logo: '/img/spotifylogo.svg',\n    link: 'https://github.com/wlu314/Spotify-Stats-Tool'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"project_title\",\n      children: \"Projects & Research\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"cardLink\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardTitleContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: project.logo,\n                alt: `${project.title} logo`,\n                className: \"cardLogo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"cardTitle\",\n                children: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"cardDescription\",\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tagContainer\",\n              children: project.tags.map((tag, tagIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tag\",\n                children: tag\n              }, tagIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Projects","projects","title","description","tags","logo","link","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","href","target","rel","src","alt","tag","tagIndex","_c","$RefreshReg$"],"sources":["/Users/wesleylu/Desktop/wlu314/src/Pages/Home/Projects.jsx"],"sourcesContent":["import React from 'react';\nimport './Projects.css';\n\nfunction Projects() {\n  const projects = [\n    {\n      title: 'Automate Algorithm Design',\n      description:\n        'In a 5.9 million-image airborne object tracking dataset, I implemented MLP and KNN surrogate meta-models to enhance genome performance prediction, improving model selection accuracy.',\n      tags: ['Python', 'PyTorch', 'Scikit-Learn', 'AWS'],\n      logo: '/img/vipprogram.jpg',\n      link: 'https://vip.gatech.edu/teams/vvk',\n    },\n    {\n      title: 'Personal Website',\n      description:\n        'After designing my website on Figma, I implemented it using HTML, CSS, and JavaScript to host online using Vercel.',\n      tags: ['HTML/CSS', 'JavaScript', 'Figma', 'React'],\n      logo: '/img/websitelogo.png',\n      link: 'wesley.lu',\n    },\n    {\n      title: 'Pairs Trading with Machine Learning',\n      description:\n        'Using public datasets and APIs, found trading pairs and predict price correlation using supervised and unsupervised machine learning methods.',\n      tags: ['Python', 'Matplotlib', 'Scikit-Learn', 'Tensorflow', 'SQL'],\n      logo: '/img/stocklogo.png',\n      link: 'https://wlu314.github.io/CS4641/',\n    },\n    {\n      title: 'Spindle',\n      description:\n        'No-code web app that enables users to set up NoSQL database and generate RESTful APIs by uploading a CSV file, simplifying backend setup and generates CRUD endpoints using natural language queries.',\n      tags: ['TypeScript', 'JavaScript', 'MongoDB', 'LangChain'],\n      logo: '/img/spindlelogo.png',\n      link: 'spindleapi.com',\n    },\n    {\n      title: 'Algorithmic Puzzle Solving',\n      description:\n        'Passionate about tackling complex logic challenges, I enjoy solving Jane Street puzzles through simulations or programming.',\n      tags: ['Python', 'Java', 'Jupyter Notebook'],\n      logo: '/img/puzzlelogo.avif',\n      link: 'https://www.janestreet.com/puzzles/current-puzzle/',\n    },\n    {\n      title: 'LC2200 Processor',\n      description:\n        'Design an LC2200 emulator to simulate core functions including ALU computations, register updates, manages interrupts and paging for effective memory/process management.',\n      tags: ['C++'],\n      logo: '/img/cpulogo.jpg',\n      link: '',\n    },\n    {\n      title: 'Spotify Stats Tool',\n      description:\n        'Developed an Android application that stores user information and displays stats. Features include artist guessing game, friend list, and etc. All designs made in Figma.',\n      tags: ['Java', 'Android Studio', 'Figma', 'Firebase', 'SpotifyAPI'],\n      logo: '/img/spotifylogo.svg',\n      link: 'https://github.com/wlu314/Spotify-Stats-Tool',\n    },\n  ];\n\n  return (\n    <div>\n      <h1 className=\"project_title\">Projects & Research</h1>\n      <div className=\"container\">\n        <div className=\"grid\">\n          {projects.map((project, index) => (\n            <a\n              key={index}\n              href={project.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"cardLink\"\n            >\n              <div className=\"card\">\n                <div className=\"cardTitleContainer\">\n                  <img src={project.logo} alt={`${project.title} logo`} className=\"cardLogo\" />\n                  <h2 className=\"cardTitle\">{project.title}</h2>\n                </div>\n                <p className=\"cardDescription\">{project.description}</p>\n                <div className=\"tagContainer\">\n                  {project.tags.map((tag, tagIndex) => (\n                    <span key={tagIndex} className=\"tag\">\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}